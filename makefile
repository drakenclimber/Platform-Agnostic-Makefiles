#*******************************************************************************
#
#  Copyright 2011 Drakenclimber, LLC.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#*******************************************************************************
# Revision information.  DO NOT MODIFY.  This is auto-generated by the SCM.
#
# $Revision: $
# $Date: $
#
#*******************************************************************************

#*******************************************************************************
#
#  Revision information
#
#*******************************************************************************

#*******************************************************************************
#  Gnu Make Standard Library
#*******************************************************************************
include gmsl/gmsl

#*******************************************************************************
#  Shell/Environment
#*******************************************************************************
include shell.mk

#*******************************************************************************
#  Variant
#*******************************************************************************
include variant.mk
include inc_paths.mk
include source_list.mk

#*******************************************************************************
#  Toolchain
#*******************************************************************************
DEFAULT_TOOLCHAIN  = mingw
TOOLCHAIN         ?= $(DEFAULT_TOOLCHAIN)

#*******************************************************************************
#  Sources and libraries
#*******************************************************************************
# paths
OUT_DIR        := ../bld/$(VARIANT)_$(TOOLCHAIN)_$(BUILD_TYPE_DIR)
SRC_DIR        := ../src
LIB_DIR        := $(OUT_DIR)
EXE_DIR        := $(OUT_DIR)/bin

# lists
INC_LIST       := $(addprefix -I../, $(INC_PATHS))
SRC_LIST       := $(addprefix $(OUT_DIR)/, $(foreach library, $(LIB_LIST), $($(addsuffix _SRC_LIST,$(library)))))
ARCHIVE_LIST   := $(addprefix $(LIB_DIR)/, $(addsuffix .a,$(LIB_LIST)))

#*******************************************************************************
#  Targets
#*******************************************************************************
.SECONDEXPANSION:
all: $$(EXECUTABLE)
	@echo Built $(BUILD_TYPE_DIR) build of $(VARIANT) for $(TOOLCHAIN)
	@echo Done.

clean: toolchain_clean
	@echo Cleaned $(BUILD_TYPE_DIR) build of $(VARIANT) for $(TOOLCHAIN)
	@echo Done.

help: variant_help toolchain_help
	@echo "+-------------------------------------------------------------------+"
	@echo "| General makefile help information                                 |"
	@echo "+-------------------------------------------------------------------+"
	@echo "| Targets supported:                                                |"
	@echo "|     all (default)   builds the executable                         |"
	@echo "|     cflags          list the compiler flags/defines in this build |"
	@echo "|     clean           deletes all build artifacts                   |"
	@echo "|     help            outputs this help infomration                 |"
	@echo "|     lflags          list the linker flags/defines in this build   |"
	@echo "|     libraries       list the libraries in this build              |"
	@echo "|     sources         list the sources in this build                |"
	@echo "|                                                                   |"
	@echo "+-------------------------------------------------------------------+"
	@echo "| Optional input parameters:                                        |"
	@echo "|                                                                   |"
	@echo "| VARIANT=                                                          |"
	@echo "|                                                                   |"
	@echo "|     default         $(DEFAULT_VARIANT)                            |"
	@echo "|                                                                   |"
	@echo "|     description     a variant is a specific configuration         |" 
	@echo "|                                                                   |"
	@echo "| BUILD_TYPE=                                                       |"
	@echo "|     BUILD_REL       build a release build                         |"
	@echo "|     BUILD_DEV       build a development build                     |"
	@echo "|     BUILD_DBG       build a debug build                           |"
	@echo "|                                                                   |"
	@echo "|     default         $(DEFAULT_BUILD_TYPE)                         |"
	@echo "|                                                                   |"
	@echo "|     description     specifies the build type.  specifically:      |"
	@echo "|                     +------+-----------+---------------+----------+"
	@echo "|                     |Build |  Asserts  |  Optimization |  Debug   |"
	@echo "|                     |      |  Enabled? |  Level        | Symbols? |"
	@echo "|                     +------+-----------+---------------+----------+"
	@echo "|                     | REL  |     No    | -O2 -Ospace   |    No    |"
	@echo "|                     | DEV  |    Yes    | -O2 -Ospace   |    No    |"
	@echo "|                     | DBG  |    Yes    | -O0 -Ospace   |   Yes    |"
	@echo "|                     +------+-----------+---------------+----------+"
	@echo "|                                                                   |"
	@echo "| TOOLCHAIN=                                                        |"
	@echo "|     gcc             GNU Compiler Collection (GCC)                 |"
	@echo "|     mingw           GNU Compiler Collection (GCC) for Windows     |"
	@echo "|                                                                   |"
	@echo "|     default         $(DEFAULT_TOOLCHAIN)                          |"
	@echo "|                                                                   |"
	@echo "|     description     toolchain selector.  note that not all        |"
	@echo "|                     variants are supports by all toolchains.      |"
	@echo "|                                                                   |"
	@echo "+-------------------------------------------------------------------+"

cflags: ;
	@echo Variant $(VARIANT) utilizes the following compiler defines:
	@echo "+-------------------------------------------------------------------+"
	$(foreach define, $(COMPILER_DEFINES), @echo $(define)${NEWLINE})
	@echo "+-------------------------------------------------------------------+"
	@echo ""${NEWLINE}
	@echo Variant $(VARIANT) utilizes the following compiler flags:
	@echo "+-------------------------------------------------------------------+"
	$(foreach flag, $(COMPILER_FLAGS), @echo $(flag)${NEWLINE})
	@echo "+-------------------------------------------------------------------+"

lflags: ;
	@echo Variant $(VARIANT) utilizes the following linker flags:
	@echo "+-------------------------------------------------------------------+"
	$(foreach flag, $(LINKER_FLAGS), @echo $(flag)${NEWLINE})
	@echo "+-------------------------------------------------------------------+"

libraries: ;
	@echo Variant $(VARIANT) utilizes the following libraries:
	@echo "+-------------------------------------------------------------------+"
	$(foreach library, $(LIB_LIST), @echo $(library)${NEWLINE})
	@echo "+-------------------------------------------------------------------+"

sources: ;
	@echo Variant $(VARIANT) utilizes the following source files:
	@echo "+-------------------------------------------------------------------+"
	$(foreach src_file, $(SRC_LIST), @echo $(subst .o,.c,$(subst $(OUT_DIR),$(SRC_DIR),$(src_file)))${NEWLINE})
	@echo "+-------------------------------------------------------------------+"

#*******************************************************************************
#  Toolchain Targets
#*******************************************************************************
include toolchain.mk

#*******************************************************************************
#  Makefile Trickery
#*******************************************************************************
.PHONY: all cflags clean help lflags libraries sources
.DEFAULT_GOAL := all
-include $(SRC_LIST:.o=.d)
